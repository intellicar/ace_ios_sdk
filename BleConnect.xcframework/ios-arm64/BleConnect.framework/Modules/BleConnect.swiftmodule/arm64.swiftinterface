// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BleConnect
@_exported import BleConnect
import CoreBluetooth
import Foundation
import Swift
import UIKit
@_hasMissingDesignatedInitializers open class BaseModule {
  public func test()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class ReadData<T> {
  @objc deinit
}
@_hasMissingDesignatedInitializers open class Converter {
  @objc deinit
}
public enum State {
  case scanning
  case scanningStoped
  case found
  case notFound
  case connecting
  case failledToConnect
  case connected
  case disConnected
  case authorized
  case unAuthorized
  public static func == (a: BleConnect.State, b: BleConnect.State) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
open class ACE {
  public var recivedData: ((Foundation.Data) -> ())?
  public var deviceBluetoothStatus: ((CoreBluetooth.CBManagerState) -> ())?
  public var connectionStatus: ((BleConnect.State, Swift.Error?) -> ())?
  required public init(config: BleConnect.BleConfig, enableDebug: Swift.Bool = false)
  public func scanAndConnect()
  public func disconnect()
  public func getBluetoothState() -> CoreBluetooth.CBManagerState?
  public func lock()
  @objc deinit
}
public struct BleConfig {
  public let name: Swift.String
  public var scanTimeout: Swift.Double
  public var connectionTimeout: Swift.Double
  public var isDebugEnabled: Swift.Bool
  public init(isDebugEnabled: Swift.Bool = false, scanTimeout: Foundation.TimeInterval = 30, connectionTimeout: Foundation.TimeInterval = 30, name: Swift.String)
}
public typealias Byte = Swift.UInt8
public typealias Long = Swift.UInt64
public typealias ByteArray = [Swift.UInt8]
public typealias Short = Swift.UInt16
public typealias Response = [Swift.String : Any]
public typealias numberOfPermissionCount = Swift.Int
extension BleConnect.State : Swift.Equatable {}
extension BleConnect.State : Swift.Hashable {}
